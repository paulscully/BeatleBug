@page "/register"
@inject NavigationManager navigationManager
@inject IUserService userService

<h1 style="text-align:center" class="h2 font-weight-normal login-title">Register</h1>
@if (!succeeded)
{
    <div style="background-color:#fefefe;width:400px; margin:auto;" class="card">
        <div style="margin:auto" class="card-body">
            <h5 class="card-title">Please enter your details</h5>
            <EditForm Model="registerDto" OnValidSubmit="HandleValidSubmit">
                <CustomValidation @ref="customValidation" />
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group mb-3">
                    <label for="email">Email Address</label>
                    <InputText Id="email" class="form-control" @bind-Value="registerDto.Email" />
                    <ValidationMessage For="@(() => registerDto.Email)" />
                </div>
                <div class="form-group mb-3">
                    <label for="username">Username</label>
                    <InputText Id="username" class="form-control" @bind-Value="registerDto.Username" />
                    <ValidationMessage For="@(() => registerDto.Username)" />
                </div>
                <div class="form-group mb-3">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="registerDto.Password" />
                    <ValidationMessage For="@(() => registerDto.Password)" />
                </div>
                <div class="form-group mb-3">
                    <label for="password">Confirm Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="registerDto.ConfirmPassword" />
                    <ValidationMessage For="@(() => registerDto.ConfirmPassword)" />
                </div>

                @if (!registering)
                {
                    <button class="btn btn-primary" type="submit">Submit</button>
                }
                else
                {
                    <p>
                        Registering...
                    </p>
                }

            </EditForm>
        </div>
    </div>
}
else 
{
    <p>
        Registration successful! <a href="login">Click here to login</a>.
    </p>
}


@code {
    private RegisterDto registerDto = new();
    private CustomValidation? customValidation;
    private bool registering;
    private bool succeeded;

    private async Task HandleValidSubmit()
    {
        registering = true;

        var result = await userService.RegisterUser(registerDto);
       
        if (result.Succeeded)
        {
            succeeded = true;
        }
        else
        {
            customValidation?.ClearErrors();
            var errors = new Dictionary<string, List<string>>();
            errors.Add("", result.Errors.ToList());
            customValidation?.DisplayErrors(errors);
        }

        registering = false;
    }
}
